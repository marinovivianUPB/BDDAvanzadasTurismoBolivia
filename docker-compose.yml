version: '3.1'

services:
  mysql_master:
    build:
      context: .
      dockerfile: Dockerfile.master
    container_name: mysql_master
    ports:
      - "3308:3306"
    networks:
      - mysql_net
    volumes:
      - master_data:/var/lib/mysql
  mysql_slave:
    build:
      context: .
      dockerfile: Dockerfile.slave
    container_name: mysql_slave
    ports:
      - "3309:3306"
    depends_on:
      - mysql_master
    networks:
      - mysql_net
    volumes:
      - slave_data:/var/lib/mysql
  mongo:
    build:
      context: ./mongo
      dockerfile: Dockerfile
    container_name: mongodbturismo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_ADMIN_USERNAME: ${MONGO_ADMIN_USERNAME}
      MONGO_ADMIN_PASSWORD: ${MONGO_ADMIN_PASSWORD}
      MONGO_MANAGER_USERNAME: ${MONGO_MANAGER_USERNAME}
      MONGO_MANAGER_PASSWORD: ${MONGO_MANAGER_PASSWORD}
      MONGO_VIEWER_USERNAME: ${MONGO_VIEWER_USERNAME}
      MONGO_VIEWER_PASSWORD: ${MONGO_VIEWER_PASSWORD}
    volumes:
      - ./mongo/mongod.conf:/etc/mongod.conf
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo/export-data.sh:/usr/local/bin/export-data.sh
    env_file:
      - ./.env

volumes:
  master_data:
  slave_data:

networks:
  mysql_net:
    driver: bridge
